image: docker:stable

stages:
  - build
  - test

variables:
  IMAGE: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}

build:
  stage: build
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - cd app
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE:latest || true
    - docker build
        --cache-from $IMAGE:latest
        --tag $IMAGE:latest
        --file ./Dockerfile.prod
        "."
    - docker push $IMAGE:latest

test:
  stage: test
  image: $IMAGE:latest
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: movies_dev
    POSTGRES_USER: movies
    POSTGRES_PASSWORD: movies
    DATABASE_TEST_URL: postgres://movies:movies@postgres:5432/movies_dev
    SQL_ENGINE: django.db.backends.postgresql
    SQL_DATABASE: movies_dev
    SQL_USER: movies
    SQL_PASSWORD: movies
    SQL_HOST: postgres
    SQL_PORT: 5432
    DATABASE: postgres
  script:
    - cd app
    - pytest -p no:warnings --cov=.
    - flake8 .
    - black --check --exclude=env .
    - isort ./*/*.py --check-only
